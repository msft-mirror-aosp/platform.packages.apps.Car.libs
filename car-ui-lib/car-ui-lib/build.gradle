/*
 * Copyright (C) 2019 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Library-level build file

plugins {
    id 'com.android.library'
    id 'aaosApps.buildLogic'
    id 'aaosApps.localPublish'
}

android {
    namespace 'com.android.car.ui'
    testNamespace 'com.android.car.ui.test'


    defaultConfig {
        minSdkVersion 28
        targetSdkVersion 33
        versionCode 2
        versionName "2.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'proguard-rules.pro', 'proguard-rules-platform.pro'
    }

    sourceSets {
        main {
            res.srcDirs = [
                    'src/main/res',
                    'src/main/res-overlayable',
                    'src/main/res-private'
            ]
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
        animationsDisabled = true
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
        }
        release {
            // Don't proguard the library itself but provides the consumerProguardFiles
            minifyEnabled false
        }
    }

    project.gradle.taskGraph.whenReady {
        connectedDebugAndroidTest {
            ignoreFailures = true
        }
    }

    buildFeatures {
        buildConfig = false
    }

    // This is the gradle equivalent of the libs: ["android.car"] in the Android.bp
    useLibrary 'android.car'

    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'
}

dependencies {
    compileOnly project(':oem-apis')
    api project(':car-rotary-lib')
    api libs.androidx.annotation
    api libs.androidx.activity
    api libs.androidx.appcompat
    api libs.androidx.constraintlayout
    api libs.androidx.preference
    api libs.androidx.recyclerview
    api libs.androidx.core
    api libs.androidx.asynclayoutinflater

    androidTestImplementation project(':car-ui-lib-testing')
    androidTestImplementation libs.hamcrest.library
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation libs.androidx.espresso.contrib
    androidTestImplementation libs.google.truth
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.mockito.core
    androidTestImplementation libs.androidx.test.runner
    androidTestImplementation libs.androidx.test.rules
    // This is needed to be able to spy certain classes with Mockito
    // It's major/minor version must match Mockito's.
    androidTestImplementation libs.dexmaker.mockito.inline
}
