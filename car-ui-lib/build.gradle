/*
 * Copyright (C) 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        google()
        jcenter()

    }
    dependencies {
        // Before upgrading this version, make sure you can close android
        // studio, run git clean -fxd, and then reopen this folder in android
        // studio and have it work. Sometimes android studio's built in gradle
        // wrapper seems to lag behind the version required by the android
        // plugin.
        classpath 'com.android.tools.build:gradle:7.2.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }

    gradle.ext.repoRootPath = rootDir.parentFile.parentFile.parentFile.parentFile.parent
    gradle.ext.aaosCertPath = gradle.ext.repoRootPath + "/packages/apps/Car/libs/certs/com_android_car_apps_test.jks"
    gradle.ext.chassisCertPath = gradle.ext.repoRootPath + "/vendor/auto/embedded/prebuilts/car-ui-lib/chassis_upload_key.jks"
    gradle.ext.platformCertPath = gradle.ext.repoRootPath + "/vendor/google/certs/devkeys/platform.keystore"
    gradle.ext.soongBash = gradle.ext.repoRootPath + "/build/soong/soong_ui.bash"
    gradle.ext.platformSdkVersion = 33 // Change this to the most recent android API level.
    if (file(gradle.ext.soongBash).exists()) {
        gradle.ext.platformSdkVersion = (gradle.ext.soongBash + " --dumpvar-mode PLATFORM_SDK_VERSION").execute().text.trim()
    }

    gradle.ext.getVersionCode = { ->
        def code = project.hasProperty('versionCode') ? versionCode.toInteger() : gradle.ext.platformSdkVersion.toInteger()
        println "VersionCode is set to $code"
        return code
    }

    gradle.ext.getVersionName = { ->
        def name = project.hasProperty('versionName') ? versionName : gradle.ext.platformSdkVersion
        println "VersionName is set to $name"
        return name
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
}

